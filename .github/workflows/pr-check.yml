name: PR Check

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lint
        run: npm run lint

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client
        run: pnpm --filter backend exec prisma generate
        env:
          DATABASE_URL: "file:./test.db"

      - name: Apply database schema
        run: pnpm --filter backend exec prisma db push
        env:
          DATABASE_URL: "file:./test.db"

      - name: Run unit tests
        run: npm run test:backend && npm run test:frontend
        env:
          DATABASE_URL: "file:./test.db"

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [lint, unit-tests]
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers and dependencies
        run: pnpm exec playwright install --with-deps

      - name: Generate Prisma client
        run: pnpm --filter backend exec prisma generate
        env:
          DATABASE_URL: "file:./test.db"

      - name: Apply database schema
        run: pnpm --filter backend exec prisma db push
        env:
          DATABASE_URL: "file:./test.db"

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          DATABASE_URL: "file:./test.db"

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
